plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.1"
}

group = 'me.dunescifye'
version = '1.0.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://repo.loohpjames.com/repository"
    }
    maven {
        url = "https://jitpack.io/"
    }
    maven {
        url = "https://hub.jeff-media.com/nexus/repository/jeff-media-public/"
    }
}

dependencies {
    compileOnly("net.kyori:adventure-api:4.17.0")
    compileOnly 'com.github.decentsoftware-eu:decentholograms:2.8.8'
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    compileOnly "com.loohp:InteractiveChat:4.2.10.2"
    implementation 'com.jeff_media:MorePersistentDataTypes:2.4.0'
    implementation 'com.jeff-media:custom-block-data:2.2.2'
}

shadowJar {
    relocate 'com.jeff_media.morepersistentdatatypes', 'me.dunescifye.graves.libs.morepersistentdatatypes'
    relocate 'com.jeff_media.customblockdata', 'me.dunescifye.graves.libs.customblockdata'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
